---

- name: Install Slurm controller packages
  package:
    name: "{{ __slurm_packages.slurmctld }}"
    state: "{{ 'latest' if slurm_upgrade else 'present' }}"
  when: not slurm_from_source

- name: Compile Slurm from Source
  include_tasks: compile.yml
  when: slurm_from_source and found_version.stdout != slurm_version_pretty
  ignore_errors: '{{ ansible_check_mode }}'

- name: Template the service files for Slurm controller
  template:
    src: "{{ item }}.j2"
    dest: "/lib/systemd/system/{{ item }}"
    owner: root
    group: root
    mode: 0644
  with_items:
    - slurmctld.service
  when: slurm_from_source and found_version.stdout != slurm_version_pretty
  ignore_errors: '{{ ansible_check_mode }}'

- name: Install cgroup.conf
  template:
      src: "{{ item }}.conf.j2"
      dest: "{{ slurm_config_dir }}/{{ item }}.conf"
      owner: "{{ __slurm_user_name }}"
      group: "{{ __slurm_group_name }}"
      mode: 0444
      backup: yes
  with_items:
    - cgroup

- name: Create Slurm state directory
  file:
    path: "{{ __slurm_config.StateSaveLocation }}"
    owner: "{{ __slurm_user_name }}"
    group: "{{ __slurm_group_name }}"
    mode: 0700
    state: directory
  when: slurm_create_dirs
  notify:
    - reload slurmctld

- name: Create Slurm log directory
  file:
    path: "{{ __slurm_config.SlurmctldLogFile | dirname }}"
    owner: "{{ __slurm_user_name }}"
    group: "{{ __slurm_group_name }}"
    mode: 0755
    state: directory
  when: slurm_create_dirs and __slurm_config.SlurmctldLogFile != omit
